// vim: set expandtab sts=4 sw=4 ai:

import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

description = "Candlepin Common"

apply plugin: Msgfmt
apply plugin: Gettext

msgfmt {
    resource "${project.group}.common.i18n.Messages"
}

// Add the source files generated by the msgfmt plugin
// TODO make the msgfmt plugin add this sourceset to the project directly
sourceSets {
    main {
        java {
            srcDirs "${project.buildDir}/msgfmt/generated_source"
        }
    }
}

// Exclude the generated i18n translation files from checkstyle
tasks.withType(Checkstyle) {
    exclude "**/i18n/Messages*"
}

dependencies {
    compile libraries.collections
    compile libraries.commons
    compile libraries.guice
    compile libraries.jackson
    compile libraries.javax
    compile libraries.liquibase
    compile libraries.logging_deps
    compile libraries.oauth
    compile libraries.resteasy
    compile libraries.hibernate_validator_ap
    compile libraries.gettext
    compile libraries.javax_servlet
    compile libraries.javax_validation
    compile libraries.validator

    testCompile libraries.core_testing
    testCompile libraries.liquibase_slf4j
    testCompile libraries.jukito
    testCompile libraries.jmock
}

test {
    useJUnitPlatform()

    testLogging {
        // set options for log level LIFECYCLE
        events TestLogEvent.FAILED,
            TestLogEvent.PASSED,
            TestLogEvent.SKIPPED
//            TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events TestLogEvent.STARTED,
                TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_ERROR,
                TestLogEvent.STANDARD_OUT
            exceptionFormat TestExceptionFormat.FULL
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = "|  ", endItem = "  |"
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println("\n" + ("-" * repeatLength) + "\n" + startItem + output + endItem + "\n" + ("-" * repeatLength))
            }
        }
    }
}

task pom {
    doLast {
        pom {
            // Exclude all transitive dependencies
            configurations.all*.exclude module: "*"

            project {
                name "Candlepin Common"
                description "Common code for Candlepin"
                parent {
                    groupId "org.candlepin"
                    artifactId "candlepin-parent"
                    version "2.0"
                    relativePath ".."
                }
                packaging "jar"
                build([:]) {
                    plugins {
                        plugin {
                            artifactId "maven-surefire-plugin"
                        }
                        plugin {
                            artifactId "maven-assembly-plugin"
                        }
                        plugin {
                            artifactId "maven-compiler-plugin"
                        }
                        plugin {
                            groupId "com.googlecode.gettext-commons"
                            artifactId "gettext-maven-plugin"
                        }
                        plugin {
                            groupId "org.owasp"
                            artifactId "dependency-check-maven"
                        }
                    }
                }
            }
        }.writeTo("pom.xml")
    }
}
