#!/bin/sh 
function evalrc ()
{
    if [ "$1" -ne "0" ] ; then
        echo "$2"
        exit
    fi
}

function gendb ()
{
    if [ "$GENDB" != "" ]; then
        buildr candlepin:genschema
        evalrc $? "schema generation failed"

        dropdb -U candlepin candlepin
        evalrc $? "dropdb failed"

        createdb -U candlepin candlepin
        evalrc $? "createdb failed"

        psql -U candlepin candlepin < target/schemagen/candlepin-proxy.sql
        evalrc $? "schema creation failed"

        psql -U candlepin < code/schema/quartz/tables_postgres.sql
        evalrc $? "quartz schema failed"
    fi
}

function deploy ()
{
    if [ -z $CLEAN ] ; then
        $SUDO rm -rf $DEPLOY
    else
        $SUDO rm -rf $CLEAN
    fi
    $SUDO cp target/candlepin-1.0.0.war $DEPLOY
}

function stopappserver ()
{
    # tc rpm /sbin/service tomcat6 stop
    # tc opt $TC_HOME/bin/catalina.sh stop
    # jboss opt $JBOSS_HOME/bin/shutdown.sh
    $STOP
}

function isrpm ()
{
    echo $1 | grep "var/lib" > /dev/null
    return $?
}

# Read in user defined variables
if [ -f $HOME/.candlepinrc ] ; then
    source $HOME/.candlepinrc
fi

if [ "$JBOSS_HOME" != "" ]; then
    # we're using JBOSS AS
    isrpm $JBOSS_HOME

    if [ "$?" -ne 0 ]; then
        START="$JBOSS_HOME/bin/run.sh 2>&1 > console.log &"
        STOP="$JBOSS_HOME/bin/shutdown.sh --shutdown"
        DEPLOY="$JBOSS_HOME/server/default/deploy/"
    else
        SUDO="sudo"
        START="sudo /sbin/service jbossas start"
        STOP="sudo /sbin/service jbossas stop"
        DEPLOY="$JBOSS_HOME/server/default/deploy/"
    fi
else
    # use tomcat 6, if not specified
    TC=tomcat6
    if [ -z $TC_HOME ]; then
        TC_HOME=/var/lib/$TC
    fi

    isrpm $TC_HOME

    if [ "$?" -ne 0 ]; then
        START="$TC_HOME/bin/catalina.sh start"
        STOP="$TC_HOME/bin/catalina.sh stop"
    else
        SUDO="sudo"
        START="sudo /sbin/service $TC start"
        STOP="sudo /sbin/service $TC stop"
    fi

    DEPLOY="$TC_HOME/webapps/candlepin.war"
    CLEAN="$TC_HOME/webapps/candlepin/"
fi

# stop the appserver
eval $STOP

# generate the postgresql DB
gendb

buildr clean package test=no

# generate SSL certs if they are needed
`dirname $0`/gen-certs

# deploy the webapp
deploy

eval $START

sleep 10
echo "Initializing Candlepin..."
wget -qO- http://localhost:8080/candlepin/admin/init
