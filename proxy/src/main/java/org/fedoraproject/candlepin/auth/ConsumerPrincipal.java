/**
 * Copyright (c) 2009 Red Hat, Inc.
 *
 * This software is licensed to you under the GNU General Public License,
 * version 2 (GPLv2). There is NO WARRANTY for this software, express or
 * implied, including the implied warranties of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. You should have received a copy of GPLv2
 * along with this software; if not, see
 * http://www.gnu.org/licenses/old-licenses/gpl-2.0.txt.
 *
 * Red Hat trademarks are not licensed under GPLv2. No permission is
 * granted to use or replicate Red Hat trademarks that are incorporated
 * in this software or its documentation.
 */
package org.fedoraproject.candlepin.auth;

import java.util.Arrays;
import org.fedoraproject.candlepin.model.Consumer;

/**
 *
 */
public class ConsumerPrincipal extends Principal {

    private Consumer consumer;

    public ConsumerPrincipal(Consumer consumer) {
        super(consumer.getOwner(), Arrays.asList(new Role[]{Role.CONSUMER}));

        this.consumer = consumer;
    }
    
    public Consumer consumer() {
        return consumer;
    }

    // Note: automatically generated by Netbeans
    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final ConsumerPrincipal other = (ConsumerPrincipal) obj;
        if (this.consumer != other.consumer &&
                (this.consumer == null || !this.consumer.equals(other.consumer))) {
            return false;
        }
        return true;
    }

    // Note: automatically generated by Netbeans
    @Override
    public int hashCode() {
        int hash = 3;
        hash = 83 * hash + (this.consumer != null ? this.consumer.hashCode() : 0);
        return hash;
    }
    
    public String toString() {
        return "ConsumerPrincipal [ownerId=" + getOwner().getId() +
            ", uuid=" + consumer.getUuid() + ", roles=" + getRoles() + "]";
    }
    
    public boolean isConsumer() {
        return true;
    }

}
