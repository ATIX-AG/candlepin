<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">

    <changeSet id="20150401140006-1" author="crog">
        <comment>Add the pool type field to the cp_pool table</comment>

        <addColumn tableName="cp_pool">
            <column name="type" type="varchar(32)"/>
        </addColumn>
    </changeSet>

    <changeSet id="20150401140006-2" author="crog">
        <sql>
            UPDATE cp_pool SET type = 'UNMAPPED_GUEST' WHERE cp_pool.id IN (
              SELECT P.id
              FROM cp_pool P
                INNER JOIN cp_pool_attribute PA1 ON (P.id = PA1.pool_id AND PA1.name = 'pool_derived')
                INNER JOIN cp_pool_attribute PA2 ON (P.id = PA2.pool_id AND PA2.name = 'unmapped_guests_only')
              WHERE PA1.value = 'true' AND PA2.value = 'true'
            )
        </sql>
    </changeSet>

    <changeSet id="20150401140006-3" author="crog">
        <sql>
            UPDATE cp_pool SET type = 'ENTITLEMENT_DERIVED' WHERE cp_pool.id IN (
              SELECT P.id
              FROM cp_pool P
                INNER JOIN cp_pool_attribute PA1 ON (P.id = PA1.pool_id AND PA1.name = 'pool_derived')
                LEFT JOIN cp_pool_attribute PA2 ON (P.id = PA2.pool_id AND PA2.name = 'unmapped_guests_only')
              WHERE
                PA1.value = 'true' AND PA2.id IS NULL
                AND (P.sourceentitlement_id IS NOT NULL AND p.sourceentitlement_id != '')
            )
        </sql>
    </changeSet>

    <changeSet id="20150401140006-4" author="crog">
        <sql>
            UPDATE cp_pool SET type = 'STACK_DERIVED' WHERE cp_pool.id IN (
              SELECT P.id
              FROM cp_pool P
                INNER JOIN cp_pool_attribute PA1 ON (P.id = PA1.pool_id AND PA1.name = 'pool_derived')
                INNER JOIN cp_pool_source_stack SS ON p.id = SS.derivedpool_id
                LEFT JOIN cp_pool_attribute PA2 ON (P.id = PA2.pool_id AND PA2.name = 'unmapped_guests_only')
              WHERE
                PA1.value = 'true' AND PA2.id IS NULL
                AND (P.sourceentitlement_id IS NULL OR p.sourceentitlement_id = '')
            )
        </sql>
    </changeSet>

    <changeSet id="20150401140006-5" author="crog">
        <sql>
            UPDATE cp_pool SET type = 'BONUS' WHERE cp_pool.id IN (
              SELECT P.id
              FROM cp_pool P
                INNER JOIN cp_pool_attribute PA1 ON (P.id = PA1.pool_id AND PA1.name = 'pool_derived')
                LEFT JOIN cp_pool_source_stack SS ON p.id = SS.derivedpool_id
                LEFT JOIN cp_pool_attribute PA2 ON (P.id = PA2.pool_id AND PA2.name = 'unmapped_guests_only')
              WHERE
                PA1.value = 'true' AND PA2.id IS NULL
                AND (P.sourceentitlement_id IS NULL OR p.sourceentitlement_id = '')
                AND SS.id IS NULL
            )
        </sql>
    </changeSet>

    <changeSet id="20150401140006-6" author="crog">
        <sql>
            UPDATE cp_pool SET type = 'NORMAL' WHERE cp_pool.id IN (
              SELECT P.id
              FROM cp_pool P
                LEFT JOIN cp_pool_attribute PA1 ON (P.id = PA1.pool_id AND PA1.name = 'pool_derived')
              WHERE PA1.id IS NULL OR PA1.value != 'true'
            )
        </sql>
    </changeSet>

    <changeSet id="20150401140006-7" author="crog">
        <comment>Add the not-null constraint to the new pool type column</comment>

        <addNotNullConstraint tableName="cp_pool" columnName="type"/>
    </changeSet>

</databaseChangeLog>
<!-- vim: set expandtab sts=4 sw=4 ai: -->
