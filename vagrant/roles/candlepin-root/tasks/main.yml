---
- name: Disable SELINUX
  selinux:
    state: disabled
  tags:
    - candlepin-root

- name: Enable EPEL
  package:
    name: epel-release
    state: present
  tags:
    - candlepin-root

- name: Install base packages
  package:
    name: "{{item}}"
    state: present
  with_items:
    - make
    - gcc
    - tomcat
    - ruby
    - rubygems
    - ruby-devel
    - rubygem-bundler
    - java-1.8.0-openjdk-devel
    - postgresql-jdbc
    - postgresql-server
    - postgresql
    - qpid-proton-c-devel
    - qpid-proton-c
    - rubygem-qpid_proton
    - zlib
    - zlib-devel
    - liquibase
    - python-psycopg2
    - libxml2-python
    - wget
    - haveged
  tags:
    - candlepin-root

- name: Ensure that all packages are up2date
  package:
    name: "*"
    state: latest
  tags:
    - candlepin-root
    - system_update

- name: Enable & Start the haveged entropy service
  service:
    name: haveged
    enabled: yes
    state: started
  tags:
    - candlepin-root

- name: Add remote debugging & urandom config to tomcat
  lineinfile:
    dest: /etc/tomcat/tomcat.conf
    line: "JAVA_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"
  tags:
    - candlepin-root

- name: Create directory for YourKit profiling library
  file:
    path: /opt/yjp/bin/linux-x86-64
    state: directory
  when: setup_yourkit is defined
  tags:
    - candlepin-root
    - yourkit-setup

- name: Copy YourKit profiling library from host
  copy:
    src: "{{yourkit_library}}"
    dest: /opt/yjp/bin/linux-x86-64/libyjpagent.so
    mode: 0755
  when: setup_yourkit is defined
  tags:
    - candlepin-root
    - yourkit-setup

- name: Add YourKit profiling library
  lineinfile:
    dest: /etc/tomcat/tomcat.conf
    line: "LD_LIBRARY_PATH=/opt/yjp/bin/linux-x86-64"
  when: setup_yourkit is defined
  tags:
    - candlepin-root
    - yourkit-setup

- name: Add YourKit profiling config to tomcat
  lineinfile:
    dest: /etc/tomcat/tomcat.conf
    line: 'CATALINA_OPTS="-agentlib:yjpagent=port={{yourkit_agent_port}}"'
  when: setup_yourkit is defined
  tags:
    - candlepin-root
    - yourkit-setup

- name: Initiate database
  command: service postgresql initdb
  args:
    creates: /var/lib/pgsql/data/postgresql.conf
  tags:
    - candlepin-root

- name: Set postgresql to trust
  replace:
    dest: /var/lib/pgsql/data/pg_hba.conf
    regexp: '(ident|peer)'
    replace: 'trust'
    backup: yes
  tags:
    - candlepin-root

- name: Add postgresql remote access from 192.168.*.*
  lineinfile:
    dest: /var/lib/pgsql/data/pg_hba.conf
    line: 'host    all             all             192.168.0.1 255.255.0.0 trust'
  tags:
    - candlepin-root

- name: Set postgresql to allow connections over the network
  replace:
    dest: /var/lib/pgsql/data/postgresql.conf
    regexp: "^#listen_addresses = 'localhost'"
    replace: "listen_addresses = '*'"
    backup: yes
  tags:
    - candlepin-root

- name: Start PostgreSQL and enable at boot
  service:
    name: postgresql
    enabled: yes
    state: started
  tags:
    - candlepin-root

- name: Check if firewalld is on
  shell: "systemctl is-active firewalld.service"
  ignore_errors: true
  register: firewalld_status
  tags:
    - candlepin-root

- name: Punch holes in firewall
  firewalld:
    port: "{{item}}/tcp"
    permanent: True
    state: enabled
    immediate: True
  with_items:
    - 22
    - 5432
    - 443
    - 8443
    - 8080
  when: firewalld_status.rc == 0
  tags:
    - candlepin-root

- name: Gem refreshing
  command: gem update --system
  tags:
    - candlepin-root

- name: Install gem dependencies
  gem:
    name: "{{item}}"
    user_install: False
  with_items:
    - json_pure
  tags:
    - candlepin-root

- name: Create postgresql user
  postgresql_user:
    name: candlepin
    role_attr_flags: CREATEDB
  tags:
    - candlepin-root

- name: Create postgresql db
  postgresql_db:
    name: candlepin
    owner: candlepin
  tags:
    - candlepin-root
